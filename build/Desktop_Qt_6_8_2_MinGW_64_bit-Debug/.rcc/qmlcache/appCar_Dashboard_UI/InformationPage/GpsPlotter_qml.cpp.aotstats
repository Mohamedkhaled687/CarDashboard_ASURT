[
    {
        "moduleFiles": [
            {
                "entries": [
                    {
                        "codegenSuccessfull": true,
                        "column": 12,
                        "durationMicroseconds": 390,
                        "errorMessage": "",
                        "functionName": "width",
                        "line": 8
                    },
                    {
                        "codegenSuccessfull": true,
                        "column": 13,
                        "durationMicroseconds": 129,
                        "errorMessage": "",
                        "functionName": "height",
                        "line": 9
                    },
                    {
                        "codegenSuccessfull": true,
                        "column": 37,
                        "durationMicroseconds": 48,
                        "errorMessage": "",
                        "functionName": "currentLongitude",
                        "line": 14
                    },
                    {
                        "codegenSuccessfull": true,
                        "column": 36,
                        "durationMicroseconds": 43,
                        "errorMessage": "",
                        "functionName": "currentLatitude",
                        "line": 15
                    },
                    {
                        "codegenSuccessfull": false,
                        "column": 35,
                        "durationMicroseconds": 592,
                        "errorMessage": "Cannot generate efficient code for storing an array in a non-sequence type",
                        "functionName": "pathCoordinates",
                        "line": 18
                    },
                    {
                        "codegenSuccessfull": false,
                        "column": 5,
                        "durationMicroseconds": 267,
                        "errorMessage": "Functions without type annotations won't be compiled",
                        "functionName": "isValidCoordinate",
                        "line": 22
                    },
                    {
                        "codegenSuccessfull": false,
                        "column": 5,
                        "durationMicroseconds": 10,
                        "errorMessage": "Functions without type annotations won't be compiled",
                        "functionName": "updatePath",
                        "line": 29
                    },
                    {
                        "codegenSuccessfull": true,
                        "column": 17,
                        "durationMicroseconds": 580,
                        "errorMessage": "",
                        "functionName": "center",
                        "line": 49
                    },
                    {
                        "codegenSuccessfull": true,
                        "column": 23,
                        "durationMicroseconds": 61,
                        "errorMessage": "",
                        "functionName": "fill",
                        "line": 47
                    },
                    {
                        "codegenSuccessfull": false,
                        "column": 19,
                        "durationMicroseconds": 431,
                        "errorMessage": "Cannot generate efficient code for internal conversion with incompatible or ambiguous types: (component in GpsPlotter.qml)::pathCoordinates with type QVariant -> QList<QGeoCoordinate> stored as QVariant",
                        "functionName": "path",
                        "line": 69
                    },
                    {
                        "codegenSuccessfull": true,
                        "column": 25,
                        "durationMicroseconds": 319,
                        "errorMessage": "",
                        "functionName": "coordinate",
                        "line": 74
                    },
                    {
                        "codegenSuccessfull": true,
                        "column": 28,
                        "durationMicroseconds": 122,
                        "errorMessage": "",
                        "functionName": "x",
                        "line": 75
                    },
                    {
                        "codegenSuccessfull": true,
                        "column": 28,
                        "durationMicroseconds": 64,
                        "errorMessage": "",
                        "functionName": "y",
                        "line": 76
                    },
                    {
                        "codegenSuccessfull": true,
                        "column": 22,
                        "durationMicroseconds": 96,
                        "errorMessage": "",
                        "functionName": "top",
                        "line": 89
                    },
                    {
                        "codegenSuccessfull": true,
                        "column": 24,
                        "durationMicroseconds": 95,
                        "errorMessage": "",
                        "functionName": "right",
                        "line": 90
                    },
                    {
                        "codegenSuccessfull": false,
                        "column": 24,
                        "durationMicroseconds": 6,
                        "errorMessage": "Cannot resolve property type  for binding on onClicked.",
                        "functionName": "onClicked",
                        "line": 97
                    },
                    {
                        "codegenSuccessfull": false,
                        "column": 24,
                        "durationMicroseconds": 4,
                        "errorMessage": "Cannot resolve property type  for binding on onClicked.",
                        "functionName": "onClicked",
                        "line": 103
                    },
                    {
                        "codegenSuccessfull": false,
                        "column": 24,
                        "durationMicroseconds": 2,
                        "errorMessage": "Cannot resolve property type  for binding on onClicked.",
                        "functionName": "onClicked",
                        "line": 109
                    },
                    {
                        "codegenSuccessfull": true,
                        "column": 54,
                        "durationMicroseconds": 74,
                        "errorMessage": "",
                        "functionName": "type",
                        "line": 118
                    },
                    {
                        "codegenSuccessfull": true,
                        "column": 54,
                        "durationMicroseconds": 53,
                        "errorMessage": "",
                        "functionName": "type",
                        "line": 121
                    },
                    {
                        "codegenSuccessfull": false,
                        "column": 17,
                        "durationMicroseconds": 46,
                        "errorMessage": "Cannot access value for name udpClient",
                        "functionName": "target",
                        "line": 125
                    },
                    {
                        "codegenSuccessfull": false,
                        "column": 9,
                        "durationMicroseconds": 297,
                        "errorMessage": "Cannot access value for name udpClient",
                        "functionName": "onGpsLongitudeChanged",
                        "line": 126
                    },
                    {
                        "codegenSuccessfull": false,
                        "column": 9,
                        "durationMicroseconds": 52,
                        "errorMessage": "Cannot access value for name udpClient",
                        "functionName": "onGpsLatitudeChanged",
                        "line": 137
                    }
                ],
                "filepath": "GpsPlotter.qml"
            }
        ],
        "moduleId": "Car_Dashboard(appCar_Dashboard)"
    }
]
